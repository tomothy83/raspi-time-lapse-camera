#!/bin/bash
####################################
# UPLOAD_IMAGE
#
####################################

CHUNK_SIZE=10

if [ "$BACKUP_DIRECTORY" = "" ]; then
  echo "Specify BACKUP_DIRECTORY."
  exit 1
fi

if [ "$S3_BUCKET" = "" ]; then
  echo "Specify S3_BUCKET."
  exit 1
fi

if [ "$AWS_ACCESS_KEY_ID" = "" ]; then
  echo "Specify AWS_ACCESS_KEY_ID."
  exit 1
fi

if [ "$AWS_SECRET_ACCESS_KEY" = "" ]; then
  echo "Specify AWS_SECRET_ACCESS_KEY."
  exit 1
fi

if [ "$AWS_DEFAULT_REGION" = "" ]; then
  echo "Specify AWS_DEFAULT_REGION."
  exit 1
fi

if [ ! -d "$BACKUP_DIRECTORY" ]; then
  echo "BACKUP_DIRECTORY does not exist."
  exit 1
fi

function upload_file() {
  if [ ! -f "$1" ]; then
    echo "$1 does not exist!"
    return 1
  fi
  echo "Uploading $1..."
  d=$(echo $1 | sed 's/^.*\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)[0-9]\{6\}.*$/\1\/\2\/\3/')
  aws s3 cp $1 s3://$S3_BUCKET/upload/image/$d/$1
  if [ $? -eq 0 ]; then
    rm $1
  else
    echo "Upload $1 error."
  fi
}

tmp=/tmp/$$

touch $tmp-lock

pushd $BACKUP_DIRECTORY >/dev/null

ls > $tmp-files

while :
do
  if [ ! -s "$tmp-files" ]; then
    break
  fi

  head -n $CHUNK_SIZE $tmp-files > $tmp-chunk

  while :
  do
    if [ ! -s "$tmp-chunk" ]; then
      break
    fi
    read f < $tmp-chunk
    upload_file $f &
    sed '1d' $tmp-chunk > $tmp-chunk-tmp
    mv $tmp-chunk-tmp $tmp-chunk
  done

  wait

  sed "1,${CHUNK_SIZE}d" $tmp-files > $tmp-files-tmp
  mv $tmp-files-tmp $tmp-files
done

popd

rm $tmp-*
